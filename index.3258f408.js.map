{"mappings":"ACGA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAQ,EAAE,CAEX,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAM,IAAI,CAAC,EAAI,KAAK,CAAC,EAAE,C,C,C,M,E,CADpB,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,CAAA,CAAA,OAAA,QAAA,CAAA,GAAZ,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAmB,CAAnB,IAAM,EAAN,EAAA,KAAA,CACG,EAAM,EAAG,aAAa,CAEtB,EAAQ,SAAS,aAAa,CAAC,EAAG,OAAO,CAAC,WAAW,GAE3D,CAAA,EAAM,SAAS,CAAG,EAAG,SAAS,CAE9B,EAAI,YAAY,CAAC,EAAO,EAAI,KAAK,CAAC,EAAI,KAAK,CAAC,MAAM,CAAG,EAAE,CACzD,C,C,M,E,CARK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write your code here\nvar table = document.querySelector(\"table\");\nvar array = [];\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var row = _step.value;\n        array.push(row.cells[1]);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nvar _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\ntry {\n    for(var _iterator1 = array[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n        var el = _step1.value;\n        var row1 = el.parentElement;\n        var newEl = document.createElement(el.tagName.toLowerCase());\n        newEl.innerHTML = el.innerHTML;\n        row1.insertBefore(newEl, row1.cells[row1.cells.length - 1]);\n    }\n} catch (err) {\n    _didIteratorError1 = true;\n    _iteratorError1 = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n            _iterator1.return();\n        }\n    } finally{\n        if (_didIteratorError1) {\n            throw _iteratorError1;\n        }\n    }\n}\n\n//# sourceMappingURL=index.3258f408.js.map\n","'use strict';\n\n// write your code here\nconst table = document.querySelector('table');\n\nconst array = [];\n\nfor (const row of table.rows) {\n  array.push(row.cells[1]);\n}\n\nfor (const el of array) {\n  const row = el.parentElement;\n\n  const newEl = document.createElement(el.tagName.toLowerCase());\n\n  newEl.innerHTML = el.innerHTML;\n\n  row.insertBefore(newEl, row.cells[row.cells.length - 1]);\n}\n"],"names":["table","document","querySelector","array","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","rows","Symbol","iterator","next","done","row","value","push","cells","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","el","row1","parentElement","newEl","createElement","tagName","toLowerCase","innerHTML","insertBefore","length"],"version":3,"file":"index.3258f408.js.map"}